const Random={float:function(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.random()*(max-min+1)+min},int:function(min,max){return Math.floor(Random.float(min,max))},shuffle:function(array){for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}return array},choice:function(thing){if(typeof thing=="string"||Array.isArray(thing)){return thing[Random.int(0,thing.length-1)]}else{return`cannot pick from ${typeof thing}`}},sample:function(sequence,lengthOfReturn){let final=[];sequence=sequence.toString();for(let i=0;i<lengthOfReturn;i++){final.push(sequence[Random.int(0,sequence.length-1)])}return final},stringFromChars:function(chars="abc.xyz/123",len=5){let final="";for(let i=0;i<len;i++){final+=chars[Random.int(0,chars.length-1)]}return final},multiFloat:function(min=0,max=1,amt=4){let output=[];for(let i=0;i<amt;i++){output.push(Random.float(min,max))}return output},hex:function(){const charset="0123456789ABCDEF";let colorCode="#";for(let i=0;i<6;i++){colorCode+=charset[Random.int(0,charset.length-1)]}return colorCode},rgb:function(){return`rgb(${Random.int(0,255)}, ${Random.int(0,255)}, ${Random.int(0,255)})`},hsl:function(){return`hsl(${Random.int(0,360)}, ${Random.int(0,100)}%, ${Random.int(0,100)}%)`},coinFlip:function(headsProbability=.5){if(headsProbability<0||headsProbability>1){throw new Error("Heads probability must be between 0 and 1")}const randomValue=Math.random();return randomValue<headsProbability?"heads":"tails"},bool:function(){const randomValue=Math.random();return randomValue<.5},subset:function(array,size=Math.floor(Math.random()*(array.length+1))){if(!Array.isArray(array)){throw new Error("Input must be an array")}if(array.length===0||size>array.length){return[]}const shuffledArray=Random.shuffle([...array]);return shuffledArray.slice(0,size)},powerSet:function(set){if(!Array.isArray(set)){throw new Error("Input must be an array")}const powerSet=[];powerSet.push([]);for(const element of set){const temp=[];for(const subset of powerSet){temp.push(subset.concat(element))}powerSet.push(...temp)}return powerSet},permute:function(array){if(!Array.isArray(array)){throw new Error("Input must be an array")}if(array.length===1){return[array]}const permutations=[];for(let i=0;i<array.length;i++){const currentElement=array[i];const remaining=array.slice(0,i).concat(array.slice(i+1));const subPermutations=Random.permute(remaining);for(const subPermutation of subPermutations){permutations.push([currentElement].concat(subPermutation))}}return permutations},uuid:function(){if(typeof window!=="undefined"&&window.crypto&&window.crypto.randomUUID){return window.crypto.randomUUID()}else{const chars="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";return chars.replace(/[xy]/g,(function(c){const r=Math.random()*16|0,v=c==="x"?r:r&3|8;return v.toString(16)}))}},customUUID:function(formatString="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx"){if(typeof formatString!=="string"){throw new Error("Format string must be a string")}const uuidParts=[];let currentSection="";for(let char of formatString){if(/[^xy]/.test(char)){currentSection+=char}else if(char==="x"||char==="y"){currentSection+=Math.floor(Math.random()*16).toString(16)}else{throw new Error(`Unsupported format character: ${char}`)}if(currentSection.length===(char==="x"||char==="y"?1:currentSection.length)){uuidParts.push(currentSection);currentSection=""}}if(currentSection.length>0){throw new Error("Incomplete format string section")}return uuidParts.join("")},password:function(length=12,complexity="medium"){if(typeof length!=="number"||length<=0){throw new Error("Password length must be a positive number")}if(!["low","medium","high"].includes(complexity.toLowerCase())){throw new Error("Invalid complexity level. Choose 'low', 'medium', or 'high'")}const charPools={low:"abcdefghijklmnopqrstuvwxyz0123456789",medium:"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()",high:"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-=[]{}|;':\",<.>/?`~"};const charPool=charPools[complexity.toLowerCase()];let password="";for(let i=0;i<length;i++){password+=charPool[Math.floor(Math.random()*charPool.length)]}if(complexity!=="low"){const hasLowercase=/[a-z]/.test(password);const hasUppercase=/[A-Z]/.test(password);const hasNumber=/[0-9]/.test(password);const hasSymbol=/[!@#$%^&*()]/.test(password)||complexity==="high"&&/[_+\-=\[\]{}|;':",.<>\/?`~]/.test(password);if(!hasLowercase||!hasUppercase||!hasNumber||!hasSymbol){return this.password(length,complexity)}}return password},grayscale:function(){const r=Math.floor(Math.random()*256);const g=Math.floor(Math.random()*256);const b=Math.floor(Math.random()*256);const grayValue=Math.round(.2126*r+.7152*g+.0722*b);return`rgb(${grayValue},${grayValue},${grayValue})`},complimentaryColor:function(color){const rgbToHsl=function(r,g,b){r/=255,g/=255,b/=255;const max=Math.max(r,g,b),min=Math.min(r,g,b);let h,s,l=(max+min)/2;if(max===min){h=s=0}else{const d=max-min;s=l>.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break}h/=6}return[h*360,s*100,l*100]};const hslToRgb=function(h,s,l){let r,g,b;h/=360;s/=100;l/=100;if(s===0){r=g=b=l}else{const hue2rgb=function(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p};const q=l<.5?l*(1+s):l+s-l*s;const p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3)}return[Math.round(r*255),Math.round(g*255),Math.round(b*255)]};const clamp=function(value,min,max){return Math.min(Math.max(value,min),max)};const complimentaryHex=function(hex){if(!/^#[0-9A-F]{6}$/i.test(hex)){throw new Error("Unsupported color format. Only RGB, HSL and HEX formats are supported.")}hex=hex.substring(1);let r=parseInt(hex.substring(0,2),16);let g=parseInt(hex.substring(2,4),16);let b=parseInt(hex.substring(4,6),16);r=(255-r).toString(16).padStart(2,"0");g=(255-g).toString(16).padStart(2,"0");b=(255-b).toString(16).padStart(2,"0");return`#${r}${g}${b}`};let hslColor;if(color.startsWith("#")){return complimentaryHex(color)}else if(color.startsWith("rgb")){const[r,g,b]=color.match(/\d+/g);hslColor=rgbToHsl(parseInt(r),parseInt(g),parseInt(b))}else if(color.startsWith("hsl")){hslColor=color.match(/\d+/g).map(Number)}else{throw new Error("Unsupported color format. Only RGB, HSL and HEX formats are supported.")}let complementaryHue=(hslColor[0]+180)%360;complementaryHue=clamp(complementaryHue,0,360);let complementaryColor;if(color.startsWith("rgb")){const[r,g,b]=hslToRgb(complementaryHue,hslColor[1],hslColor[2]);complementaryColor=`rgb(${r},${g},${b})`}else{complementaryColor=`hsl(${complementaryHue.toFixed(0)},${hslColor[1].toFixed(2)}%,${hslColor[2].toFixed(2)}%)`}return complementaryColor},randomShade:function(color){const hexToRgb=function(hex){hex=hex.replace(/^#/,"");const bigint=parseInt(hex,16);const r=bigint>>16&255;const g=bigint>>8&255;const b=bigint&255;return[r,g,b]};const rgbToHsl=function(r,g,b){r/=255,g/=255,b/=255;const max=Math.max(r,g,b),min=Math.min(r,g,b);let h,s,l=(max+min)/2;if(max===min){h=s=0}else{const d=max-min;s=l>.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break}h/=6}return[h*360,s*100,l*100]};const hslToRgb=function(h,s,l){let r,g,b;h/=360;s/=100;l/=100;if(s===0){r=g=b=l}else{const hue2rgb=function(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p};const q=l<.5?l*(1+s):l+s-l*s;const p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3)}return[Math.round(r*255),Math.round(g*255),Math.round(b*255)]};const adjustLightnessForShade=function(l){const minLightness=10;return Math.max(l-Math.random()*20,minLightness)};let hslColor;if(color.startsWith("#")){const[r,g,b]=hexToRgb(color);hslColor=rgbToHsl(r,g,b)}else if(color.startsWith("rgb")){const[r,g,b]=color.match(/\d+/g).map(Number);hslColor=rgbToHsl(r,g,b)}else if(color.startsWith("hsl")){hslColor=color.match(/\d+/g).map(Number)}else{throw new Error("Unsupported color format. Only RGB, HSL, and HEX formats are supported.")}hslColor[2]=adjustLightnessForShade(hslColor[2]);let newColor;if(color.startsWith("rgb")){const[r,g,b]=hslToRgb(hslColor[0],hslColor[1],hslColor[2]);newColor=`rgb(${r},${g},${b})`}else if(color.startsWith("hsl")){newColor=`hsl(${hslColor[0].toFixed(0)},${hslColor[1].toFixed(2)}%,${hslColor[2].toFixed(2)}%)`}else{newColor=`#${hslToRgb(hslColor[0],hslColor[1],hslColor[2]).map((c=>c.toString(16).padStart(2,"0"))).join("")}`}return newColor},randomTint:function(color){const hexToRgb=function(hex){hex=hex.replace(/^#/,"");const bigint=parseInt(hex,16);const r=bigint>>16&255;const g=bigint>>8&255;const b=bigint&255;return[r,g,b]};const rgbToHsl=function(r,g,b){r/=255,g/=255,b/=255;const max=Math.max(r,g,b),min=Math.min(r,g,b);let h,s,l=(max+min)/2;if(max===min){h=s=0}else{const d=max-min;s=l>.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break}h/=6}return[h*360,s*100,l*100]};const hslToRgb=function(h,s,l){let r,g,b;h/=360;s/=100;l/=100;if(s===0){r=g=b=l}else{const hue2rgb=function(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p};const q=l<.5?l*(1+s):l+s-l*s;const p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3)}return[Math.round(r*255),Math.round(g*255),Math.round(b*255)]};const adjustLightnessForTint=function(l){const maxLightness=90;return Math.min(l+Math.random()*20,maxLightness)};let hslColor;if(color.startsWith("#")){const[r,g,b]=hexToRgb(color);hslColor=rgbToHsl(r,g,b)}else if(color.startsWith("rgb")){const[r,g,b]=color.match(/\d+/g).map(Number);hslColor=rgbToHsl(r,g,b)}else if(color.startsWith("hsl")){hslColor=color.match(/\d+/g).map(Number)}else{throw new Error("Unsupported color format. Only RGB, HSL, and HEX formats are supported.")}hslColor[2]=adjustLightnessForTint(hslColor[2]);let newColor;if(color.startsWith("rgb")){const[r,g,b]=hslToRgb(hslColor[0],hslColor[1],hslColor[2]);newColor=`rgb(${r},${g},${b})`}else if(color.startsWith("hsl")){newColor=`hsl(${hslColor[0].toFixed(0)},${hslColor[1].toFixed(2)}%,${hslColor[2].toFixed(2)}%)`}else{newColor=`#${hslToRgb(hslColor[0],hslColor[1],hslColor[2]).map((c=>c.toString(16).padStart(2,"0"))).join("")}`}return newColor},rollDice:function(sides=6){if(typeof sides!=="number"||sides<=0||!Number.isInteger(sides)){throw new Error("Invalid number of sides. Please provide a positive integer for the number of sides.")}const result=Random.int(1,sides);return result},shuffleDeck:function(deck){if(!Array.isArray(deck)||deck.length===0){throw new Error("Invalid deck provided. Please provide an array of card objects.")}for(let i=deck.length-1;i>0;i--){const j=Math.floor(Random.float(0,i+1));[deck[i],deck[j]]=[deck[j],deck[i]]}return deck},pickCard:function(){const suits=["Spades","Hearts","Diamonds","Clubs"];const values=["Ace","2","3","4","5","6","7","8","9","10","Jack","Queen","King"];const randomSuitIndex=Random.int(0,suits.length-1);const randomValueIndex=Random.int(0,values.length-1);return{card:values[randomValueIndex],suit:suits[randomSuitIndex]}},even:function(min=0,max=100){min=Math.floor(min);max=Math.floor(max);if(min>max){throw new Error("Minimum cannot be greater than maximum.")}max=max%2===0?max:max-1;const randomNum=Math.floor(Math.random()*(max-min+1))+min;return randomNum%2===0?randomNum:randomNum+2},odd:function(min=0,max=100){min=Math.floor(min);max=Math.floor(max);if(min>max){throw new Error("Minimum cannot be greater than maximum.")}max=max%2===1?max:max-1;const randomNum=Math.floor(Math.random()*(max-min+1))+min;return randomNum%2===1?randomNum:randomNum+1},prime:function(min=2,max=100){min=Math.floor(min);max=Math.floor(max);if(min>max||min<2){throw new Error("Minimum must be greater than or equal to 2 and less than or equal to maximum.")}let primeFound=false;let randomNum;while(!primeFound){randomNum=Math.floor(Math.random()*(max-min+1))+min;primeFound=Random.isPrime(randomNum)}return randomNum},isPrime:function(num){if(num<=1)return false;if(num<=3)return true;if(num%2===0||num%3===0)return false;for(let i=5;i*i<=num;i+=6){if(num%i===0||num%(i+2)===0)return false}return true}};module.exports=Random;